---
title: "Bienvenue dans Mitan"
---

__Mitan__, le _milieu_ en occitan, est une plateforme dédiée à __l'exploration__ et au 
__suivi__ du __patrimoine forestier__ des communes françaises. 

<center><img src="./assets/LogoMitanRect.png" width=242px></img></center>

<br>

En utilisant des __données satellitaires__ régulières, Mitan détecte et quantifie en temps quasi-réel les __perturbations__ subies par les écosystèmes forestiers, qu'il s'agisse de changements liés aux conditions climatiques, à l'exploitation des ressources ou à d'autres
impacts humains.

Plus qu'un simple outil de suivi, Mitan se veut un __espace d'échange et de compréhension__. Il peut être utilisé par citoyens, chercheurs et gestionnaires des milieux naturels pour réfléchir ensemble à notre rapport au milieu environnant, prendre des décisions face aux données et trouver __le juste milieu__.

## Comment démarrer ?

* Vous trouverez dans la barre de navigation en haut un __champ de recherche__. 

* __Tapez le nom de votre commune__ pour trouver sa page.


Vous pouvez aussi...

<center>[Voir un exemple](87153.html){.btn .btn-secondary .btn role="button"}</center>
<br>
<center>[Voir la liste des communes disponibles](communes.html){.btn .btn-secondary .btn role="button"}</center>
<br>

Voir les __communes disponibles__ sur la carte et __cliquer__ sur votre commune pour accéder à sa page. 

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Leaflet Map</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/1.7.1/leaflet.js"></script>
    <style>
        #map {
            height: 500px;
            width: 100%;
        }
    </style>
</head>


<div id="map"></div>

<script>
var map = L.map('map'); // Initialize map without centering

L.tileLayer(
    "https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",
    {
        minZoom: 0,
        maxZoom: 18,
        attribution: "IGN-F/Geoportail",
        tileSize: 256
    }
).addTo(map);

// Load GeoJSON file
fetch("./communes_results/merged_commune.geojson") // Change to actual GeoJSON path
    .then(response => response.json())
    .then(data => {
        var geojsonLayer = L.geoJSON(data, {
            style: {
                color: "#f79873",
                weight: 2,
                fillOpacity: 0.
            },
            onEachFeature: function (feature, layer) {
                var popup = L.popup().setContent(feature.properties.NOM || "Unknown");
                
                // Highlight effect on hover and show text
                layer.on('mouseover', function (e) {
                    layer.setStyle({ weight: 3, fillOpacity: 1 });
                    popup.setLatLng(e.latlng).openOn(map);
                });
                layer.on('mouseout', function () {
                    layer.setStyle({ weight: 2, fillOpacity: 0. });
                    map.closePopup();
                });
                
                // Click event to redirect
                layer.on('click', function () {
                    if (feature.properties && feature.properties.ID) {
                        window.location.href = `./${feature.properties.INSEE_COM}.html`;
                    }
                });
            }
        }).addTo(map);
        
        // Fit map bounds to GeoJSON data
        map.fitBounds(geojsonLayer.getBounds());
    })
    .catch(error => console.error('Error loading GeoJSON:', error));

</script>

</body>
